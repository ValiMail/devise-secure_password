# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1
aliases:
  - &current_rails_gemfile
    gemfiles/rails_6_1.gemfile

  - &previous_rails_gemfile
    gemfiles/rails_6_0.gemfile

  - &current_ruby_image
    cimg/ruby:2.7-browsers

  - &previous_ruby_image
    cimg/ruby:3.0-browsers

  - &defaults
    working_directory: ~/repo
    docker:
      - image: *current_ruby_image

  - &step_restore_root_cache
    restore_cache:
      keys:
      - valimail-secure-password-gems-{{ arch }}-{{ checksum "devise-secure_password.gemspec" }}

  - &step_install_root_dependencies
    run:
      name: install root dependencies
      command: |
        sudo apt-get update
        sudo apt-get install software-properties-common
        sudo apt-get -y install libsqlite3-dev
        gem install bundler
        bundle config set --local path 'vendor/bundle'
        bundle install --jobs=4 --retry=3

  - &step_save_cache_app-gems-rails
    save_cache:
      paths:
        - ./vendor/bundle
      key: valimail-secure-password-rails-app-gems-{{ arch }}-{{ .Environment.TARGET_GEMFILE_NAME }}-{{ checksum "gemfiles/rails-target.gemfile" }}

  - &step_save_root_cache
    save_cache:
      paths:
        - ./vendor/bundle
      key: valimail-secure-password-gems-{{ arch }}-{{ checksum "devise-secure_password.gemspec" }}

  - &step_make_test_output_directory
    run:
      name: create test metadata directory
      command: mkdir /tmp/test-results

  - &step_run_rspec_tests
    run:
      name: run rspec with simplecov
      command: |
        TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

        COVERAGE=true bundle exec rspec \
                          --format progress \
                          --format RspecJunitFormatter \
                          --out /tmp/test-results/rspec.xml \
                          ${TEST_FILES}

  - &step_store_test_results
    store_test_results:
      path: /tmp/test-results

  - &step_store_test_artifacts
    store_artifacts:
      path: /tmp/test-results
      destination: test-results

  - &step_store_coverage_artifacts
    store_artifacts:
      path: coverage
      destination: coverage

orbs:
  browser-tools: circleci/browser-tools@1.1.3

jobs:
  code-quality-job:
    <<: *defaults
    steps:
      - checkout
      - *step_restore_root_cache
      - *step_install_root_dependencies
      - *step_save_root_cache
      - run:
          name: run ruby linter (rubocop)
          command: |
            bundle exec rubocop

      - run:
          name: run code coverage (flay)
          command: |
            bundle exec rake test:flay

  current_rails-current_ruby-job:
    working_directory: ~/repo
    docker:
      - image: *current_ruby_image
        environment:
          BUNDLE_GEMFILE: *current_rails_gemfile
    steps: &rails_steps
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - *step_install_root_dependencies
      - *step_make_test_output_directory
      - *step_run_rspec_tests
      - *step_store_test_results
      - *step_store_test_artifacts
      - *step_store_coverage_artifacts

  # build current rails with previous version of ruby
  current_rails-previous_ruby-job:
    working_directory: ~/repo
    docker:
      - image: *previous_ruby_image
        environment:
          BUNDLE_GEMFILE: *current_rails_gemfile
    steps: *rails_steps

  previous_rails-current_ruby-job:
    working_directory: ~/repo
    docker:
      - image: *current_ruby_image
        environment:
          BUNDLE_GEMFILE: *previous_rails_gemfile
    steps: *rails_steps

  # build previous rails with previous version of ruby
  previous_rails-previous_ruby-job:
    working_directory: ~/repo
    docker:
      - image: *previous_ruby_image
        environment:
          BUNDLE_GEMFILE: *previous_rails_gemfile
    steps: *rails_steps

workflows:
  build-test_current-ruby:
    jobs:
      - current_rails-current_ruby-job
      - previous_rails-current_ruby-job:
          requires:
            - current_rails-current_ruby-job # let primary job fetch all dependencies first
      - code-quality-job:
          requires:
            - current_rails-current_ruby-job # let primary job fetch all dependencies first
  build-test_previous-ruby:
    jobs:
      - current_rails-previous_ruby-job
      - previous_rails-previous_ruby-job:
          requires:
            - current_rails-previous_ruby-job
