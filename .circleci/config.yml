# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
aliases:
  - &rails_5_1_gemfile
    gemfiles/rails-5_1_4.gemfile

  - &rails_5_0_gemfile
    gemfiles/rails-5_0_6.gemfile

  - &ruby_2_5_image
    circleci/ruby:2.5.1-browsers

  - &ruby_2_4_image
    circleci/ruby:2.4.4-browsers

  - &defaults
    working_directory: ~/repo
    docker:
      - image: *ruby_2_5_image

  - &step_restore_root_cache
    restore_cache:
      keys:
      - valimail-secure-password-gems-{{ arch }}-{{ checksum "Gemfile" }}

  - &step_install_root_dependencies
    run:
      name: install root dependencies
      command: |
        gem install bundler && bundle install --jobs=4 --retry=3 --path vendor/bundle

  - &step_save_cache_app-gems-rails
    save_cache:
      paths:
        - ./vendor/bundle
      key: valimail-secure-password-rails-app-gems-{{ arch }}-{{ .Environment.TARGET_GEMFILE_NAME }}-{{ checksum "gemfiles/rails-target.gemfile" }}

  - &step_save_root_cache
    save_cache:
      paths:
        - ./vendor/bundle
      key: valimail-secure-password-gems-{{ arch }}-{{ checksum "Gemfile" }}

  - &step_make_test_output_directory
    run:
      name: create test metadata directory
      command: mkdir /tmp/test-results

  - &step_run_rspec_tests
    run:
      name: run rspec with simplecov
      command: |
        TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

        COVERAGE=true bundle exec rspec \
                          --format progress \
                          --format RspecJunitFormatter \
                          --out /tmp/test-results/rspec.xml \
                          ${TEST_FILES}

  - &step_store_test_results
    store_test_results:
      path: /tmp/test-results

  - &step_store_test_artifacts
    store_artifacts:
      path: /tmp/test-results
      destination: test-results

  - &step_store_coverage_artifacts
    store_artifacts:
      path: coverage
      destination: coverage

jobs:
  code-quality-job:
    <<: *defaults
    steps:
      - checkout
      - *step_restore_root_cache
      - *step_install_root_dependencies
      - *step_save_root_cache
      - run:
          name: run ruby linter (rubocop)
          command: |
            bundle exec rake test:rubocop

      - run:
          name: run code coverage (flay)
          command: |
            bundle exec rake test:flay

  rails_5_X-job:
    working_directory: ~/repo
    docker:
      - image: *ruby_2_5_image
        environment:
          BUNDLE_GEMFILE: *rails_5_1_gemfile
    steps: &rails_steps
      - checkout
      - *step_install_root_dependencies
      - *step_make_test_output_directory
      - *step_run_rspec_tests
      - *step_store_test_results
      - *step_store_test_artifacts
      - *step_store_coverage_artifacts

  # build rails_5_X with previous version of ruby
  rails_5_X-prev-job:
    working_directory: ~/repo
    docker:
      - image: *ruby_2_5_image
        environment:
          BUNDLE_GEMFILE: *rails_5_0_gemfile
    steps: *rails_steps

  rails_5_0-job:
    working_directory: ~/repo
    docker:
      - image: *ruby_2_4_image
        environment:
          BUNDLE_GEMFILE: *rails_5_1_gemfile
    steps: *rails_steps

  # build rails_5_0 with previous version of ruby
  rails_5_0-prev-job:
    working_directory: ~/repo
    docker:
      - image: *ruby_2_4_image
        environment:
          BUNDLE_GEMFILE: *rails_5_0_gemfile
    steps: *rails_steps

workflows:
    version: 2
    build-test:
      jobs:
        - rails_5_X-job
        - rails_5_0-job:
            requires:
              - rails_5_X-job # let primary job fetch all dependencies first
        - code-quality-job:
            requires:
              - rails_5_X-job # let primary job fetch all dependencies first
    build-test-prev:
      jobs:
        - rails_5_X-prev-job
        - rails_5_0-prev-job:
            requires:
              - rails_5_X-prev-job
